//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2017.10.16 at 09:04:14 AM PDT
//


package org.pharmgkb.io.exporter.clinvar.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MeasureTraitAttributetype.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MeasureTraitAttributetype">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="ModeOfInheritance"/>
 *     &lt;enumeration value="Penetrance"/>
 *     &lt;enumeration value="AgeOfOnset"/>
 *     &lt;enumeration value="ClinicalSignificanceHistory"/>
 *     &lt;enumeration value="SeverityDescription"/>
 *     &lt;enumeration value="AssertionMethod"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "MeasureTraitAttributetype")
@XmlEnum
public enum MeasureTraitAttributetype {

    @XmlEnumValue("ModeOfInheritance")
    MODE_OF_INHERITANCE("ModeOfInheritance"),
    @XmlEnumValue("Penetrance")
    PENETRANCE("Penetrance"),
    @XmlEnumValue("AgeOfOnset")
    AGE_OF_ONSET("AgeOfOnset"),
    @XmlEnumValue("ClinicalSignificanceHistory")
    CLINICAL_SIGNIFICANCE_HISTORY("ClinicalSignificanceHistory"),
    @XmlEnumValue("SeverityDescription")
    SEVERITY_DESCRIPTION("SeverityDescription"),
    @XmlEnumValue("AssertionMethod")
    ASSERTION_METHOD("AssertionMethod");
    private final String value;

    MeasureTraitAttributetype(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MeasureTraitAttributetype fromValue(String v) {
        for (MeasureTraitAttributetype c: MeasureTraitAttributetype.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
