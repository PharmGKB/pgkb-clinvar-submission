//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2017.10.16 at 09:04:14 AM PDT
//


package org.pharmgkb.io.exporter.clinvar.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Traittypelist.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Traittypelist">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Disease"/>
 *     &lt;enumeration value="DrugResponse"/>
 *     &lt;enumeration value="Subphenotype"/>
 *     &lt;enumeration value="BloodGroup"/>
 *     &lt;enumeration value="Finding"/>
 *     &lt;enumeration value="InfectionResistance"/>
 *     &lt;enumeration value="PhenotypeInstruction"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "Traittypelist")
@XmlEnum
public enum Traittypelist {

    @XmlEnumValue("Disease")
    DISEASE("Disease"),
    @XmlEnumValue("DrugResponse")
    DRUG_RESPONSE("DrugResponse"),
    @XmlEnumValue("Subphenotype")
    SUBPHENOTYPE("Subphenotype"),
    @XmlEnumValue("BloodGroup")
    BLOOD_GROUP("BloodGroup"),
    @XmlEnumValue("Finding")
    FINDING("Finding"),
    @XmlEnumValue("InfectionResistance")
    INFECTION_RESISTANCE("InfectionResistance"),
    @XmlEnumValue("PhenotypeInstruction")
    PHENOTYPE_INSTRUCTION("PhenotypeInstruction");
    private final String value;

    Traittypelist(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Traittypelist fromValue(String v) {
        for (Traittypelist c: Traittypelist.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
